/**
 *
 * $Id$
 */
package org.eclipse.emf.ecp.ecview.extension.model.extension.validation;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecp.ecview.common.model.datatypes.YDatadescription;

import org.eclipse.emf.ecp.ecview.extension.model.datatypes.YTableDatatype;

import org.eclipse.emf.ecp.ecview.extension.model.extension.YColumn;
import org.eclipse.emf.ecp.ecview.extension.model.extension.YSelectionType;

/**
 * A sample validator interface for {@link org.eclipse.emf.ecp.ecview.extension.model.extension.YTable}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface YTableValidator {
	boolean validate();

	boolean validateDatatype(YTableDatatype value);
	boolean validateDatadescription(YDatadescription value);
	boolean validateSelectionType(YSelectionType value);
	boolean validateSelection(Object value);
	boolean validateMultiSelection(EList<Object> value);
	boolean validateCollection(EList<Object> value);
	boolean validateType(Class<?> value);
	boolean validateEmfNsURI(String value);

	boolean validateTypeQualifiedName(String value);

	boolean validateColumns(EList<YColumn> value);

	boolean validateItemImageProperty(String value);
}
